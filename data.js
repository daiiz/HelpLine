var data = 
{
  "codes": [],
  "defs": [
    "$ Compare (#{files}) with the one from (#{numbers}) minutes ago {6}",
    "$ 「(#{files})」ファイルを(#{numbers})分前の(もの|バージョン)と#{compare} {6}",
    "$ 「(#{files})」ファイルが(#{numbers})分前から(変化した|変わった)ところを(#{display}) {6}",
    "% git diff HEAD '@{#{$2} minutes ago}' #{$1} {6}",
    "$ (#{numbers})分前の「(#{files})」ファイルと現在の(もの|バージョン)を#{compare} {6}",
    "% git diff HEAD '@{#{$1} minutes ago}' #{$2} {6}",
    "$ (#{numbers})日前の「(#{files})」ファイルと現在のものを#{compare} {6}",
    "% git diff HEAD '@{#{$1} days ago}' #{$2} {6}",
    "$ 現在の「(#{files})」ファイルを(#{numbers})日前のものを#{compare} {6}",
    "% git diff HEAD '@{#{$2} days ago}' #{$1} {6}",
    "$ (1つ|ひとつ)前のバージョンの(#{files})と#{compare} {6}",
    "$ (1つ|ひとつ)前のバージョンの(#{files})からの変更点 {6}",
    "% git diff $(git rev-list -n 1 HEAD -- #{$2})^ -- #{$2} {6}",
    "$ (#{files})を(1つ|ひとつ)前のバージョンと#{compare} {6}",
    "$ (#{files})の(1つ|ひとつ)前のバージョンからの変更点 {6}",
    "% git diff $(git rev-list -n 1 HEAD -- #{$1})^ -- #{$1} {6}",
    "$ (#{files})の最新版の変更点を(#{display}) {6}",
    "$ 最新の(#{files})の#{change}個所は? {6}",
    "$ (#{files})は最後にどこを変えた? {6}",
    "$ (#{files})の(一番新しい|最新の)#{change}は? {6}",
    "% git diff $(git rev-list -n 1 HEAD -- #{$1})^ -- #{$1} {6}",
    "$ (2つ|ふたつ)前のバージョンの(#{files})と#{compare} {6}",
    "$ (2つ|ふたつ)前のバージョンの(#{files})からの変更点を(#{display}) {6}",
    "% git diff $(git rev-list -n 2 HEAD -- #{$2})^^ -- #{$2} {6}",
    "$ (#{files})を(2つ|ふたつ)前のバージョンと#{compare} {6}",
    "$ (#{files})の(2つ|ふたつ)前のバージョンのからの#{change}を(#{display}) {6}",
    "% git diff $(git rev-list -n 2 HEAD -- #{$1})^^ -- #{$1} {6}",
    "$ ファイルの#{change}のランキングを#{display} {9}",
    "$ (よく|頻繁に)#{change}(されてる|されている)ファイルを#{display} {9}",
    "$ ファイルの#{change}頻度を#{display} {9}",
    "$ ファイルを#{change}頻度順にソート {9}",
    "% git log --name-only --pretty=\"format:\" | grep -ve \"^$\" | sort | uniq -c | sort -r {9}",
    "$ ブランチを#{display} {11}",
    "% git branch {11}",
    "$ 「(#{params})」というブランチを作成する {11}",
    "% git branch #{$1} {11}",
    "$ 「(#{params})」というブランチを#{delete} {11}",
    "% git branch -d #{$1} {11}",
    "$ レポジトリの中身を(確認する|見る|調べる) {14}",
    "% ls .git {14}",
    "$ リモートレポジトリを確認する {14}",
    "% git remote -v {14}",
    "$ ファイルを大きい(順に|順番で)表示する {15}",
    "$ ファイルを大きさの順に表示する {15}",
    "$ サイズの順に表示する {15}",
    "% git ls-files | xargs du -s | sort -r -n {15}",
    "$ ファイルを新しい順に(リスト|表示)する {16}",
    "$ ファイルを新しさ順に(リスト|表示)する {16}",
    "$ 新しいファイルから順番に(リスト|表示)する {16}",
    "% git ls-files | xargs ls -l -t {16}",
    "$ ファイル「(#{files})」の編集履歴を完全に(#{delete})がワーキングツリーは残す {17}",
    "% git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch #{$1}' HEAD {17}",
    "$ ファイル「(#{files})」の編集履歴を完全に(#{delete}) {17}",
    "% git filter-branch -f --index-filter 'git rm --ignore-unmatch #{$1}' HEAD {17}",
    "$ 編集履歴をGitHubに反映させる {17}",
    "% git push origin --force --all {17}",
    "$ ファイル「(#{files})」の(#{numbers})分前からの(#{change})履歴を(#{display}) {18}",
    "% git log --since \"#{$2} minutes ago\" #{$1} {18}",
    "$ (#{numbers})分前からのファイル「(#{files})」の(#{change})履歴を(#{display}) {18}",
    "% git log --since \"#{$1} minutes ago\" #{$2} {18}",
    "$ ファイル「(#{files})」の(#{numbers})分前からの(#{change})を(#{display}) {18}",
    "% git diff HEAD \"@{#{$2} minutes ago}\" #{$1} {18}",
    "$ (#{numbers})分前からのファイル「(#{files})」の(#{change})を(#{display}) {18}",
    "% git diff HEAD \"@{#{$1} minutes ago}\" #{$2} {18}",
    "$ ファイル「(#{files})」の(#{numbers})時間前からの(#{change})履歴を(#{display}) {18}",
    "% git log --since \"#{$2} hours ago\" #{$1} {18}",
    "$ (#{numbers})時間前からのファイル「(#{files})」の(#{change})履歴を(#{display}) {18}",
    "% git log --since \"#{$1} hours ago\" #{$2} {18}",
    "$ ファイル「(#{files})」の(#{numbers})時間前からの(#{change})を(#{display}) {18}",
    "% git diff HEAD \"@{#{$2} hours ago}\" #{$1} {18}",
    "$ (#{numbers})時間前からのファイル「(#{files})」の(#{change})を(#{display}) {18}",
    "% git diff HEAD \"@{#{$1} hours ago}\" #{$2} {18}",
    "$ ファイル「(#{files})」の(#{numbers})日前からの(#{change})履歴を(#{display}) {18}",
    "% git log --since \"#{$2} days ago\" #{$1} {18}",
    "$ (#{numbers})日前からのファイル「(#{files})」の(#{change})履歴を(#{display}) {18}",
    "% git log --since \"#{$1} days ago\" #{$2} {18}",
    "$ ファイル「(#{files})」の(#{numbers})日前からの(#{change})を(#{display}) {18}",
    "% git diff HEAD \"@{#{$2} days ago}\" #{$1} {18}",
    "$ (#{numbers})日前からのファイル「(#{files})」の(#{change})を(#{display}) {18}",
    "% git diff HEAD \"@{#{$1} days ago}\" #{$2} {18}",
    "$ ブランチのリストを更新日時順に表示する {19}",
    "% git branch --sort=committerdate {19}",
    "$ 直前のコミットを取り消す {21}",
    "% git reset --soft HEAD^ {21}",
    "$ ひとつ前のコミットの状態に完全に戻す {21}",
    "% git reset --hard HEAD^ {21}",
    "$ コミット後の変更を全部消す {21}",
    "% git reset --hard HEAD {21}",
    "$ すごい昔の状態で動作を確認したい {21}",
    "% git reset --hard 昔のコミットのハッシュ値 {21}",
    "$ 直前のリセットをなかったことにする {21}",
    "% git reset --hard ORIG_HEAD {21}",
    "$ 過去のあらゆる操作履歴を見る {22}",
    "% git reflog {22}",
    "$ 過去のコミット履歴を見る {22}",
    "% git log {22}",
    "$ ブランチ(のリスト)?を(#{display}) {25}",
    "% git branch {25}",
    "$ (#{params})というブランチを作成する {25}",
    "% git branch #{$1} {25}",
    "$ (#{branches})というブランチを(#{delete}) {25}",
    "% git branch -d #{$1} {25}",
    "$ 現在の編集状態を(#{display}) {28}",
    "$ 編集中のファイルを(#{display}) {28}",
    "% git status {28}",
    "$ (#{numbers})個前までのコミットをまとめる {32}",
    "% git rebase -i HEAD~#{$1} {32}",
    "$ ひとつ前の「(#{files})」ファイルを(#{display}) {34}",
    "$ 1バージョン前の「(#{files})」ファイルを(#{display}) {34}",
    "% git show HEAD~:#{$1} {34}",
    "$ ふたつ前の「(#{files})」ファイルを(#{display}) {34}",
    "$ 2バージョン前の「(#{files})」ファイルを(#{display}) {34}",
    "% git show HEAD~~:#{$1} {34}",
    "$ (#{numbers})個前の「(#{files})」ファイルを(#{display}) {34}",
    "$ (#{numbers})バージョン前の「(#{files})」ファイルを(#{display}) {34}",
    "% git show HEAD~#{$1}:#{$2} {34}",
    "$ (#{numbers})分前の「(#{files})」ファイルを(#{display}) {34}",
    "% git show '@{#{$1} minutes ago}':#{$2} {34}",
    "$ (#{numbers})時間前の「(#{files})」ファイルを(#{display}) {34}",
    "% git show '@{#{$1} hours ago}':#{$2} {34}",
    "$ (#{numbers})日前の「(#{files})」ファイルを(#{display}) {34}",
    "% git show '@{#{$1} days ago}':#{$2} {34}",
    "$ 昨日の「(#{files})」ファイルを(#{display}) {34}",
    "% git show @{yesterday}:#{$1} {34}",
    "$ (#{numbers})分前(から|以降に)(#{modified})ファイルをリストする {35}",
    "% git diff --name-only '@{#{$1} minutes ago}' {35}",
    "$ (#{numbers})時間前(から|以降に)(#{modified})ファイルをリストする {35}",
    "% git diff --name-only '@{#{$1} hours ago}' {35}",
    "$ (#{numbers})日前(から|以降に)(#{modified})ファイルをリストする {35}",
    "% git diff --name-only '@{#{$1} days ago}' {35}",
    "$ (#{numbers})日前からの変更を(#{display}) {35}",
    "% git log --stat --since=\"#{$1} days ago\" {35}",
    "$ 編集中のファイルをリストする {36}",
    "% git ls-files -m {36}",
    "$ (#{params})という文字列がはじめて出現した(バージョン|コミット)の情報を(#{display}) {37}",
    "% git log -1 `git rev-list --all | xargs git grep '#{$1}' | tail -1 | ruby -e \"STDIN.each {|line| puts line[0..39] }\"` {37}",
    "$ (#{params})という文字列がはじめて出現した(バージョン|コミット)に一時的に戻す {37}",
    "% git checkout `git rev-list --all | xargs git grep '#{$1}' | tail -1 | ruby -e \"STDIN.each {|line| puts line[0..39] }\"` {37}",
    "$ (#{numbers})個前のバージョンに一時的に戻す {38}",
    "% git checkout HEAD~#{$1} {38}",
    "$ (#{numbers})日前の状態に一時的に戻す {38}",
    "% git checkout \"@{#{$1} days ago}\"  {38}",
    "$ (#{numbers})時間前の状態に一時的に戻す {38}",
    "% git checkout \"@{#{$1} hours ago}\"  {38}",
    "$ (#{numbers})分前の状態に一時的に戻す {38}",
    "% git checkout \"@{#{$1} mins ago}\"  {38}",
    "$ 「(#{params})」という文字列を含むファイルを捜す {39}",
    "% git grep '#{$1}' {39}",
    "$ 「(#{params})」という文字列を含むファイルを全履歴から捜す {39}",
    "% git rev-list --all | xargs git grep '#{$1}' {39}",
    "$ ブランチ名を(#{params})に変える {40}",
    "% git branch -m #{$1} {40}",
    "$ (1つ|ひとつ)前のコミットで(削除した|消した)(#{files})を(復元する|元に戻す) {44}",
    "% git checkout $(git rev-list -n 1 HEAD -- #{$2})^ -- #{$2} {44}",
    "$ 現在の状況を(#{display}) {45}",
    "% git status {45}",
    "$ 「(#{files})」というファイルを「(#{params})」という名前に(変更|移動|改名|リネーム)する {46}",
    "% git mv #{$1} #{$2} {46}",
    "$ ファイル「(#{files})」を(#{delete}) {47}",
    "% git rm #{$1} {47}",
    "$ 直前のコミットのコメントを修正する {50}",
    "% git commit --amend {50}",
    "$ (#{files})に(#{params})という名前が(出現した|書かれた)のはいつ？ {51}",
    "% git blame #{$1} | grep #{$2} {51}",
    "$ (#{params})という名前が(#{files})に(出現した|書かれた)のはいつ？ {51}",
    "% git blame #{$2} | grep #{$1} {51}",
    "$ これまで追加/削除された行数を表示する {52}",
    "% git log --numstat --pretty=\"%H\" | awk 'NF==3 {plus+=$1; minus+=$2} END {printf(\"+%d, -%d\\\\n\", plus, minus)}' {52}",
    "$ (#{files})に(#{params})という名前が(出現した|書かれた)のはいつ？ {54}",
    "% git blame #{$1} | grep #{$2} {54}",
    "$ ツリー状にログを表示する {55}",
    "% git log --graph --all --format=\"%x09%an%x09%h %d %s\" {55}",
    "$ 最初に「(#{params})」という文字列を含むコミットをした時から現在までに追加されたファイルはどれとどれ？ {56}",
    "% git log --oneline --date=iso-strict --format='%cd %s' | grep #{$1} | tail -1 | awk '{print $1}' | xargs githelp-changed {56}"
  ],
  "pages": [
    "このサイトについて",
    "やりたいことの例",
    "意義",
    "gitコマンドに関する疑問",
    "Issues",
    "Glossary",
    "古いファイルとの比較",
    "Git情報源",
    "関連文献",
    "ファイルの編集回数のランキング",
    "★",
    "ブランチ",
    "gem版の使い方",
    "Electron版GitHelp (2018版)",
    "レポジトリを確認する",
    "ファイルを大きい順に表示",
    "新しい順にファイルを表示",
    "特定のファイルの履歴を消す",
    "最近の変更を知る",
    "ブランチのリストを更新日時順に表示する",
    "ファイルリスト",
    "Reset関連",
    "操作履歴",
    "branches",
    "タグ",
    "ブランチの表示",
    "アイデア",
    "Gitのマニュアルページ",
    "編集中のファイル",
    "レポジトリ",
    "コミットID",
    "コミット",
    "コミットをまとめる",
    "バージョン指定",
    "古いファイル表示",
    "最近編集したファイルのリストを表示する",
    "編集中のファイルをリストする",
    "文字列がはじめて出現したバージョンを捜す",
    "古いバージョンに一時的に戻す",
    "変数や単語が出現しているファイルを捜す",
    "ブランチ名",
    "ユーザ情報",
    "引数パラメタ",
    "リモートブランチを消す",
    "ファイル復元",
    "現在の状況",
    "ファイル名変更",
    "ファイル削除",
    "テンプレート",
    "一時的に仕事を退避",
    "コメント修正",
    "文字列の出現を調べる",
    "追加/削除された行数",
    "数字パラメタ",
    "文字列の出現判定",
    "ツリー状にログを表示する",
    "ファイル追加",
    "args",
    "増井俊之"
  ]
}
module.exports = data
